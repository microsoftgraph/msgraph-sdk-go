// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models
// Represents the moderation state of an Engage conversation message.
type EngagementConversationModerationState int

const (
    // The content is published.
    PUBLISHED_ENGAGEMENTCONVERSATIONMODERATIONSTATE EngagementConversationModerationState = iota
    // The content is pending review by a moderator.
    PENDINGREVIEW_ENGAGEMENTCONVERSATIONMODERATIONSTATE
    // he content has been rejected by a moderator.
    DISMISSED_ENGAGEMENTCONVERSATIONMODERATIONSTATE
    // A marker value for members added after the release of this API.
    UNKNOWNFUTUREVALUE_ENGAGEMENTCONVERSATIONMODERATIONSTATE
)

func (i EngagementConversationModerationState) String() string {
    return []string{"published", "pendingReview", "dismissed", "unknownFutureValue"}[i]
}
func ParseEngagementConversationModerationState(v string) (any, error) {
    result := PUBLISHED_ENGAGEMENTCONVERSATIONMODERATIONSTATE
    switch v {
        case "published":
            result = PUBLISHED_ENGAGEMENTCONVERSATIONMODERATIONSTATE
        case "pendingReview":
            result = PENDINGREVIEW_ENGAGEMENTCONVERSATIONMODERATIONSTATE
        case "dismissed":
            result = DISMISSED_ENGAGEMENTCONVERSATIONMODERATIONSTATE
        case "unknownFutureValue":
            result = UNKNOWNFUTUREVALUE_ENGAGEMENTCONVERSATIONMODERATIONSTATE
        default:
            return nil, nil
    }
    return &result, nil
}
func SerializeEngagementConversationModerationState(values []EngagementConversationModerationState) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
func (i EngagementConversationModerationState) isMultiValue() bool {
    return false
}
