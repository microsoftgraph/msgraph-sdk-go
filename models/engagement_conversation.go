// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models

import (
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
)

// EngagementConversation represents a conversation in Viva Engage.
type EngagementConversation struct {
    Entity
}
// NewEngagementConversation instantiates a new EngagementConversation and sets the default values.
func NewEngagementConversation()(*EngagementConversation) {
    m := &EngagementConversation{
        Entity: *NewEntity(),
    }
    return m
}
// CreateEngagementConversationFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateEngagementConversationFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    if parseNode != nil {
        mappingValueNode, err := parseNode.GetChildNode("@odata.type")
        if err != nil {
            return nil, err
        }
        if mappingValueNode != nil {
            mappingValue, err := mappingValueNode.GetStringValue()
            if err != nil {
                return nil, err
            }
            if mappingValue != nil {
                switch *mappingValue {
                    case "#microsoft.graph.onlineMeetingEngagementConversation":
                        return NewOnlineMeetingEngagementConversation(), nil
                }
            }
        }
    }
    return NewEngagementConversation(), nil
}
// GetCreationMode gets the creationMode property value. Indicates that the resource is in migration state and is currently being used for migration purposes.
// returns a *EngagementCreationMode when successful
func (m *EngagementConversation) GetCreationMode()(*EngagementCreationMode) {
    val, err := m.GetBackingStore().Get("creationMode")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*EngagementCreationMode)
    }
    return nil
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *EngagementConversation) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := m.Entity.GetFieldDeserializers()
    res["creationMode"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetEnumValue(ParseEngagementCreationMode)
        if err != nil {
            return err
        }
        if val != nil {
            m.SetCreationMode(val.(*EngagementCreationMode))
        }
        return nil
    }
    res["messages"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetCollectionOfObjectValues(CreateEngagementConversationMessageFromDiscriminatorValue)
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]EngagementConversationMessageable, len(val))
            for i, v := range val {
                if v != nil {
                    res[i] = v.(EngagementConversationMessageable)
                }
            }
            m.SetMessages(res)
        }
        return nil
    }
    res["starter"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetObjectValue(CreateEngagementConversationMessageFromDiscriminatorValue)
        if err != nil {
            return err
        }
        if val != nil {
            m.SetStarter(val.(EngagementConversationMessageable))
        }
        return nil
    }
    res["starterId"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetStarterId(val)
        }
        return nil
    }
    return res
}
// GetMessages gets the messages property value. The messages in a Viva Engage conversation.
// returns a []EngagementConversationMessageable when successful
func (m *EngagementConversation) GetMessages()([]EngagementConversationMessageable) {
    val, err := m.GetBackingStore().Get("messages")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.([]EngagementConversationMessageable)
    }
    return nil
}
// GetStarter gets the starter property value. The starter property
// returns a EngagementConversationMessageable when successful
func (m *EngagementConversation) GetStarter()(EngagementConversationMessageable) {
    val, err := m.GetBackingStore().Get("starter")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(EngagementConversationMessageable)
    }
    return nil
}
// GetStarterId gets the starterId property value. The unique ID of the first message in a Viva Engage conversation.
// returns a *string when successful
func (m *EngagementConversation) GetStarterId()(*string) {
    val, err := m.GetBackingStore().Get("starterId")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*string)
    }
    return nil
}
// Serialize serializes information the current object
func (m *EngagementConversation) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    err := m.Entity.Serialize(writer)
    if err != nil {
        return err
    }
    if m.GetCreationMode() != nil {
        cast := (*m.GetCreationMode()).String()
        err = writer.WriteStringValue("creationMode", &cast)
        if err != nil {
            return err
        }
    }
    if m.GetMessages() != nil {
        cast := make([]i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, len(m.GetMessages()))
        for i, v := range m.GetMessages() {
            if v != nil {
                cast[i] = v.(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable)
            }
        }
        err = writer.WriteCollectionOfObjectValues("messages", cast)
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteObjectValue("starter", m.GetStarter())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("starterId", m.GetStarterId())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetCreationMode sets the creationMode property value. Indicates that the resource is in migration state and is currently being used for migration purposes.
func (m *EngagementConversation) SetCreationMode(value *EngagementCreationMode)() {
    err := m.GetBackingStore().Set("creationMode", value)
    if err != nil {
        panic(err)
    }
}
// SetMessages sets the messages property value. The messages in a Viva Engage conversation.
func (m *EngagementConversation) SetMessages(value []EngagementConversationMessageable)() {
    err := m.GetBackingStore().Set("messages", value)
    if err != nil {
        panic(err)
    }
}
// SetStarter sets the starter property value. The starter property
func (m *EngagementConversation) SetStarter(value EngagementConversationMessageable)() {
    err := m.GetBackingStore().Set("starter", value)
    if err != nil {
        panic(err)
    }
}
// SetStarterId sets the starterId property value. The unique ID of the first message in a Viva Engage conversation.
func (m *EngagementConversation) SetStarterId(value *string)() {
    err := m.GetBackingStore().Set("starterId", value)
    if err != nil {
        panic(err)
    }
}
type EngagementConversationable interface {
    Entityable
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    GetCreationMode()(*EngagementCreationMode)
    GetMessages()([]EngagementConversationMessageable)
    GetStarter()(EngagementConversationMessageable)
    GetStarterId()(*string)
    SetCreationMode(value *EngagementCreationMode)()
    SetMessages(value []EngagementConversationMessageable)()
    SetStarter(value EngagementConversationMessageable)()
    SetStarterId(value *string)()
}
