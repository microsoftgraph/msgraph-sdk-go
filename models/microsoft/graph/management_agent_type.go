package graph
import (
    "strings"
    "errors"
)
// 
type ManagementAgentType int

const (
    EAS_MANAGEMENTAGENTTYPE ManagementAgentType = iota
    MDM_MANAGEMENTAGENTTYPE
    EASMDM_MANAGEMENTAGENTTYPE
    INTUNECLIENT_MANAGEMENTAGENTTYPE
    EASINTUNECLIENT_MANAGEMENTAGENTTYPE
    CONFIGURATIONMANAGERCLIENT_MANAGEMENTAGENTTYPE
    CONFIGURATIONMANAGERCLIENTMDM_MANAGEMENTAGENTTYPE
    CONFIGURATIONMANAGERCLIENTMDMEAS_MANAGEMENTAGENTTYPE
    UNKNOWN_MANAGEMENTAGENTTYPE
    JAMF_MANAGEMENTAGENTTYPE
    GOOGLECLOUDDEVICEPOLICYCONTROLLER_MANAGEMENTAGENTTYPE
    MICROSOFT365MANAGEDMDM_MANAGEMENTAGENTTYPE
    MSSENSE_MANAGEMENTAGENTTYPE
    INTUNEAOSP_MANAGEMENTAGENTTYPE
)

func (i ManagementAgentType) String() string {
    return []string{"EAS", "MDM", "EASMDM", "INTUNECLIENT", "EASINTUNECLIENT", "CONFIGURATIONMANAGERCLIENT", "CONFIGURATIONMANAGERCLIENTMDM", "CONFIGURATIONMANAGERCLIENTMDMEAS", "UNKNOWN", "JAMF", "GOOGLECLOUDDEVICEPOLICYCONTROLLER", "MICROSOFT365MANAGEDMDM", "MSSENSE", "INTUNEAOSP"}[i]
}
func ParseManagementAgentType(v string) (interface{}, error) {
    switch strings.ToUpper(v) {
        case "EAS":
            return EAS_MANAGEMENTAGENTTYPE, nil
        case "MDM":
            return MDM_MANAGEMENTAGENTTYPE, nil
        case "EASMDM":
            return EASMDM_MANAGEMENTAGENTTYPE, nil
        case "INTUNECLIENT":
            return INTUNECLIENT_MANAGEMENTAGENTTYPE, nil
        case "EASINTUNECLIENT":
            return EASINTUNECLIENT_MANAGEMENTAGENTTYPE, nil
        case "CONFIGURATIONMANAGERCLIENT":
            return CONFIGURATIONMANAGERCLIENT_MANAGEMENTAGENTTYPE, nil
        case "CONFIGURATIONMANAGERCLIENTMDM":
            return CONFIGURATIONMANAGERCLIENTMDM_MANAGEMENTAGENTTYPE, nil
        case "CONFIGURATIONMANAGERCLIENTMDMEAS":
            return CONFIGURATIONMANAGERCLIENTMDMEAS_MANAGEMENTAGENTTYPE, nil
        case "UNKNOWN":
            return UNKNOWN_MANAGEMENTAGENTTYPE, nil
        case "JAMF":
            return JAMF_MANAGEMENTAGENTTYPE, nil
        case "GOOGLECLOUDDEVICEPOLICYCONTROLLER":
            return GOOGLECLOUDDEVICEPOLICYCONTROLLER_MANAGEMENTAGENTTYPE, nil
        case "MICROSOFT365MANAGEDMDM":
            return MICROSOFT365MANAGEDMDM_MANAGEMENTAGENTTYPE, nil
        case "MSSENSE":
            return MSSENSE_MANAGEMENTAGENTTYPE, nil
        case "INTUNEAOSP":
            return INTUNEAOSP_MANAGEMENTAGENTTYPE, nil
    }
    return 0, errors.New("Unknown ManagementAgentType value: " + v)
}
func SerializeManagementAgentType(values []ManagementAgentType) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
