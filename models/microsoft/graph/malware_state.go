package graph

import (
    i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55 "github.com/microsoft/kiota/abstractions/go/serialization"
)

// MalwareState 
type MalwareState struct {
    // Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
    additionalData map[string]interface{};
    // Provider-generated malware category (for example, trojan, ransomware, etc.).
    category *string;
    // Provider-generated malware family (for example, 'wannacry', 'notpetya', etc.).
    family *string;
    // Provider-generated malware variant name (for example, Trojan:Win32/Powessere.H).
    name *string;
    // Provider-determined severity of this malware.
    severity *string;
    // Indicates whether the detected file (malware/vulnerability) was running at the time of detection or was detected at rest on the disk.
    wasRunning *bool;
}
// NewMalwareState instantiates a new malwareState and sets the default values.
func NewMalwareState()(*MalwareState) {
    m := &MalwareState{
    }
    m.SetAdditionalData(make(map[string]interface{}));
    return m
}
// GetAdditionalData gets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
func (m *MalwareState) GetAdditionalData()(map[string]interface{}) {
    if m == nil {
        return nil
    } else {
        return m.additionalData
    }
}
// GetCategory gets the category property value. Provider-generated malware category (for example, trojan, ransomware, etc.).
func (m *MalwareState) GetCategory()(*string) {
    if m == nil {
        return nil
    } else {
        return m.category
    }
}
// GetFamily gets the family property value. Provider-generated malware family (for example, 'wannacry', 'notpetya', etc.).
func (m *MalwareState) GetFamily()(*string) {
    if m == nil {
        return nil
    } else {
        return m.family
    }
}
// GetName gets the name property value. Provider-generated malware variant name (for example, Trojan:Win32/Powessere.H).
func (m *MalwareState) GetName()(*string) {
    if m == nil {
        return nil
    } else {
        return m.name
    }
}
// GetSeverity gets the severity property value. Provider-determined severity of this malware.
func (m *MalwareState) GetSeverity()(*string) {
    if m == nil {
        return nil
    } else {
        return m.severity
    }
}
// GetWasRunning gets the wasRunning property value. Indicates whether the detected file (malware/vulnerability) was running at the time of detection or was detected at rest on the disk.
func (m *MalwareState) GetWasRunning()(*bool) {
    if m == nil {
        return nil
    } else {
        return m.wasRunning
    }
}
// GetFieldDeserializers the deserialization information for the current model
func (m *MalwareState) GetFieldDeserializers()(map[string]func(interface{}, i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode)(error)) {
    res := make(map[string]func(interface{}, i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode)(error))
    res["category"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetCategory(val)
        }
        return nil
    }
    res["family"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetFamily(val)
        }
        return nil
    }
    res["name"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetName(val)
        }
        return nil
    }
    res["severity"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetSeverity(val)
        }
        return nil
    }
    res["wasRunning"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetWasRunning(val)
        }
        return nil
    }
    return res
}
func (m *MalwareState) IsNil()(bool) {
    return m == nil
}
// Serialize serializes information the current object
func (m *MalwareState) Serialize(writer i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.SerializationWriter)(error) {
    {
        err := writer.WriteStringValue("category", m.GetCategory())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("family", m.GetFamily())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("name", m.GetName())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("severity", m.GetSeverity())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("wasRunning", m.GetWasRunning())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteAdditionalData(m.GetAdditionalData())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetAdditionalData sets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
func (m *MalwareState) SetAdditionalData(value map[string]interface{})() {
    if m != nil {
        m.additionalData = value
    }
}
// SetCategory sets the category property value. Provider-generated malware category (for example, trojan, ransomware, etc.).
func (m *MalwareState) SetCategory(value *string)() {
    if m != nil {
        m.category = value
    }
}
// SetFamily sets the family property value. Provider-generated malware family (for example, 'wannacry', 'notpetya', etc.).
func (m *MalwareState) SetFamily(value *string)() {
    if m != nil {
        m.family = value
    }
}
// SetName sets the name property value. Provider-generated malware variant name (for example, Trojan:Win32/Powessere.H).
func (m *MalwareState) SetName(value *string)() {
    if m != nil {
        m.name = value
    }
}
// SetSeverity sets the severity property value. Provider-determined severity of this malware.
func (m *MalwareState) SetSeverity(value *string)() {
    if m != nil {
        m.severity = value
    }
}
// SetWasRunning sets the wasRunning property value. Indicates whether the detected file (malware/vulnerability) was running at the time of detection or was detected at rest on the disk.
func (m *MalwareState) SetWasRunning(value *bool)() {
    if m != nil {
        m.wasRunning = value
    }
}
