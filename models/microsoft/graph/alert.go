package graph

import (
    i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e "time"
    i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55 "github.com/microsoft/kiota/abstractions/go/serialization"
)

// Alert 
type Alert struct {
    Entity
    // Name or alias of the activity group (attacker) this alert is attributed to.
    activityGroupName *string;
    // 
    alertDetections []AlertDetection;
    // Name of the analyst the alert is assigned to for triage, investigation, or remediation (supports update).
    assignedTo *string;
    // Azure subscription ID, present if this alert is related to an Azure resource.
    azureSubscriptionId *string;
    // Azure Active Directory tenant ID. Required.
    azureTenantId *string;
    // Category of the alert (for example, credentialTheft, ransomware, etc.).
    category *string;
    // Time at which the alert was closed. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z (supports update).
    closedDateTime *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time;
    // Security-related stateful information generated by the provider about the cloud application/s related to this alert.
    cloudAppStates []CloudAppSecurityState;
    // Customer-provided comments on alert (for customer alert management) (supports update).
    comments []string;
    // Confidence of the detection logic (percentage between 1-100).
    confidence *int32;
    // Time at which the alert was created by the alert provider. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.
    createdDateTime *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time;
    // Alert description.
    description *string;
    // Set of alerts related to this alert entity (each alert is pushed to the SIEM as a separate record).
    detectionIds []string;
    // Time at which the event(s) that served as the trigger(s) to generate the alert occurred. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.
    eventDateTime *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time;
    // Analyst feedback on the alert. Possible values are: unknown, truePositive, falsePositive, benignPositive. (supports update)
    feedback *AlertFeedback;
    // Security-related stateful information generated by the provider about the file(s) related to this alert.
    fileStates []FileSecurityState;
    // A collection of alertHistoryStates comprising an audit log of all updates made to an alert.
    historyStates []AlertHistoryState;
    // Security-related stateful information generated by the provider about the host(s) related to this alert.
    hostStates []HostSecurityState;
    // IDs of incidents related to current alert.
    incidentIds []string;
    // 
    investigationSecurityStates []InvestigationSecurityState;
    // 
    lastEventDateTime *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time;
    // Time at which the alert entity was last modified. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
    lastModifiedDateTime *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time;
    // Threat Intelligence pertaining to malware related to this alert.
    malwareStates []MalwareState;
    // 
    messageSecurityStates []MessageSecurityState;
    // Security-related stateful information generated by the provider about the network connection(s) related to this alert.
    networkConnections []NetworkConnection;
    // Security-related stateful information generated by the provider about the process or processes related to this alert.
    processes []Process;
    // Vendor/provider recommended action(s) to take as a result of the alert (for example, isolate machine, enforce2FA, reimage host).
    recommendedActions []string;
    // Security-related stateful information generated by the provider about the registry keys related to this alert.
    registryKeyStates []RegistryKeyState;
    // Resources related to current alert. For example, for some alerts this can have the Azure Resource value.
    securityResources []SecurityResource;
    // Alert severity - set by vendor/provider. Possible values are: unknown, informational, low, medium, high. Required.
    severity *AlertSeverity;
    // Hyperlinks (URIs) to the source material related to the alert, for example, provider's user interface for alerts or log search, etc.
    sourceMaterials []string;
    // Alert lifecycle status (stage). Possible values are: unknown, newAlert, inProgress, resolved. (supports update). Required.
    status *AlertStatus;
    // User-definable labels that can be applied to an alert and can serve as filter conditions (for example 'HVA', 'SAW', etc.) (supports update).
    tags []string;
    // Alert title. Required.
    title *string;
    // Security-related information about the specific properties that triggered the alert (properties appearing in the alert). Alerts might contain information about multiple users, hosts, files, ip addresses. This field indicates which properties triggered the alert generation.
    triggers []AlertTrigger;
    // 
    uriClickSecurityStates []UriClickSecurityState;
    // Security-related stateful information generated by the provider about the user accounts related to this alert.
    userStates []UserSecurityState;
    // Complex type containing details about the security product/service vendor, provider, and subprovider (for example, vendor=Microsoft; provider=Windows Defender ATP; subProvider=AppLocker). Required.
    vendorInformation *SecurityVendorInformation;
    // Threat intelligence pertaining to one or more vulnerabilities related to this alert.
    vulnerabilityStates []VulnerabilityState;
}
// NewAlert instantiates a new alert and sets the default values.
func NewAlert()(*Alert) {
    m := &Alert{
        Entity: *NewEntity(),
    }
    return m
}
// GetActivityGroupName gets the activityGroupName property value. Name or alias of the activity group (attacker) this alert is attributed to.
func (m *Alert) GetActivityGroupName()(*string) {
    if m == nil {
        return nil
    } else {
        return m.activityGroupName
    }
}
// GetAlertDetections gets the alertDetections property value. 
func (m *Alert) GetAlertDetections()([]AlertDetection) {
    if m == nil {
        return nil
    } else {
        return m.alertDetections
    }
}
// GetAssignedTo gets the assignedTo property value. Name of the analyst the alert is assigned to for triage, investigation, or remediation (supports update).
func (m *Alert) GetAssignedTo()(*string) {
    if m == nil {
        return nil
    } else {
        return m.assignedTo
    }
}
// GetAzureSubscriptionId gets the azureSubscriptionId property value. Azure subscription ID, present if this alert is related to an Azure resource.
func (m *Alert) GetAzureSubscriptionId()(*string) {
    if m == nil {
        return nil
    } else {
        return m.azureSubscriptionId
    }
}
// GetAzureTenantId gets the azureTenantId property value. Azure Active Directory tenant ID. Required.
func (m *Alert) GetAzureTenantId()(*string) {
    if m == nil {
        return nil
    } else {
        return m.azureTenantId
    }
}
// GetCategory gets the category property value. Category of the alert (for example, credentialTheft, ransomware, etc.).
func (m *Alert) GetCategory()(*string) {
    if m == nil {
        return nil
    } else {
        return m.category
    }
}
// GetClosedDateTime gets the closedDateTime property value. Time at which the alert was closed. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z (supports update).
func (m *Alert) GetClosedDateTime()(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time) {
    if m == nil {
        return nil
    } else {
        return m.closedDateTime
    }
}
// GetCloudAppStates gets the cloudAppStates property value. Security-related stateful information generated by the provider about the cloud application/s related to this alert.
func (m *Alert) GetCloudAppStates()([]CloudAppSecurityState) {
    if m == nil {
        return nil
    } else {
        return m.cloudAppStates
    }
}
// GetComments gets the comments property value. Customer-provided comments on alert (for customer alert management) (supports update).
func (m *Alert) GetComments()([]string) {
    if m == nil {
        return nil
    } else {
        return m.comments
    }
}
// GetConfidence gets the confidence property value. Confidence of the detection logic (percentage between 1-100).
func (m *Alert) GetConfidence()(*int32) {
    if m == nil {
        return nil
    } else {
        return m.confidence
    }
}
// GetCreatedDateTime gets the createdDateTime property value. Time at which the alert was created by the alert provider. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.
func (m *Alert) GetCreatedDateTime()(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time) {
    if m == nil {
        return nil
    } else {
        return m.createdDateTime
    }
}
// GetDescription gets the description property value. Alert description.
func (m *Alert) GetDescription()(*string) {
    if m == nil {
        return nil
    } else {
        return m.description
    }
}
// GetDetectionIds gets the detectionIds property value. Set of alerts related to this alert entity (each alert is pushed to the SIEM as a separate record).
func (m *Alert) GetDetectionIds()([]string) {
    if m == nil {
        return nil
    } else {
        return m.detectionIds
    }
}
// GetEventDateTime gets the eventDateTime property value. Time at which the event(s) that served as the trigger(s) to generate the alert occurred. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.
func (m *Alert) GetEventDateTime()(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time) {
    if m == nil {
        return nil
    } else {
        return m.eventDateTime
    }
}
// GetFeedback gets the feedback property value. Analyst feedback on the alert. Possible values are: unknown, truePositive, falsePositive, benignPositive. (supports update)
func (m *Alert) GetFeedback()(*AlertFeedback) {
    if m == nil {
        return nil
    } else {
        return m.feedback
    }
}
// GetFileStates gets the fileStates property value. Security-related stateful information generated by the provider about the file(s) related to this alert.
func (m *Alert) GetFileStates()([]FileSecurityState) {
    if m == nil {
        return nil
    } else {
        return m.fileStates
    }
}
// GetHistoryStates gets the historyStates property value. A collection of alertHistoryStates comprising an audit log of all updates made to an alert.
func (m *Alert) GetHistoryStates()([]AlertHistoryState) {
    if m == nil {
        return nil
    } else {
        return m.historyStates
    }
}
// GetHostStates gets the hostStates property value. Security-related stateful information generated by the provider about the host(s) related to this alert.
func (m *Alert) GetHostStates()([]HostSecurityState) {
    if m == nil {
        return nil
    } else {
        return m.hostStates
    }
}
// GetIncidentIds gets the incidentIds property value. IDs of incidents related to current alert.
func (m *Alert) GetIncidentIds()([]string) {
    if m == nil {
        return nil
    } else {
        return m.incidentIds
    }
}
// GetInvestigationSecurityStates gets the investigationSecurityStates property value. 
func (m *Alert) GetInvestigationSecurityStates()([]InvestigationSecurityState) {
    if m == nil {
        return nil
    } else {
        return m.investigationSecurityStates
    }
}
// GetLastEventDateTime gets the lastEventDateTime property value. 
func (m *Alert) GetLastEventDateTime()(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time) {
    if m == nil {
        return nil
    } else {
        return m.lastEventDateTime
    }
}
// GetLastModifiedDateTime gets the lastModifiedDateTime property value. Time at which the alert entity was last modified. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
func (m *Alert) GetLastModifiedDateTime()(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time) {
    if m == nil {
        return nil
    } else {
        return m.lastModifiedDateTime
    }
}
// GetMalwareStates gets the malwareStates property value. Threat Intelligence pertaining to malware related to this alert.
func (m *Alert) GetMalwareStates()([]MalwareState) {
    if m == nil {
        return nil
    } else {
        return m.malwareStates
    }
}
// GetMessageSecurityStates gets the messageSecurityStates property value. 
func (m *Alert) GetMessageSecurityStates()([]MessageSecurityState) {
    if m == nil {
        return nil
    } else {
        return m.messageSecurityStates
    }
}
// GetNetworkConnections gets the networkConnections property value. Security-related stateful information generated by the provider about the network connection(s) related to this alert.
func (m *Alert) GetNetworkConnections()([]NetworkConnection) {
    if m == nil {
        return nil
    } else {
        return m.networkConnections
    }
}
// GetProcesses gets the processes property value. Security-related stateful information generated by the provider about the process or processes related to this alert.
func (m *Alert) GetProcesses()([]Process) {
    if m == nil {
        return nil
    } else {
        return m.processes
    }
}
// GetRecommendedActions gets the recommendedActions property value. Vendor/provider recommended action(s) to take as a result of the alert (for example, isolate machine, enforce2FA, reimage host).
func (m *Alert) GetRecommendedActions()([]string) {
    if m == nil {
        return nil
    } else {
        return m.recommendedActions
    }
}
// GetRegistryKeyStates gets the registryKeyStates property value. Security-related stateful information generated by the provider about the registry keys related to this alert.
func (m *Alert) GetRegistryKeyStates()([]RegistryKeyState) {
    if m == nil {
        return nil
    } else {
        return m.registryKeyStates
    }
}
// GetSecurityResources gets the securityResources property value. Resources related to current alert. For example, for some alerts this can have the Azure Resource value.
func (m *Alert) GetSecurityResources()([]SecurityResource) {
    if m == nil {
        return nil
    } else {
        return m.securityResources
    }
}
// GetSeverity gets the severity property value. Alert severity - set by vendor/provider. Possible values are: unknown, informational, low, medium, high. Required.
func (m *Alert) GetSeverity()(*AlertSeverity) {
    if m == nil {
        return nil
    } else {
        return m.severity
    }
}
// GetSourceMaterials gets the sourceMaterials property value. Hyperlinks (URIs) to the source material related to the alert, for example, provider's user interface for alerts or log search, etc.
func (m *Alert) GetSourceMaterials()([]string) {
    if m == nil {
        return nil
    } else {
        return m.sourceMaterials
    }
}
// GetStatus gets the status property value. Alert lifecycle status (stage). Possible values are: unknown, newAlert, inProgress, resolved. (supports update). Required.
func (m *Alert) GetStatus()(*AlertStatus) {
    if m == nil {
        return nil
    } else {
        return m.status
    }
}
// GetTags gets the tags property value. User-definable labels that can be applied to an alert and can serve as filter conditions (for example 'HVA', 'SAW', etc.) (supports update).
func (m *Alert) GetTags()([]string) {
    if m == nil {
        return nil
    } else {
        return m.tags
    }
}
// GetTitle gets the title property value. Alert title. Required.
func (m *Alert) GetTitle()(*string) {
    if m == nil {
        return nil
    } else {
        return m.title
    }
}
// GetTriggers gets the triggers property value. Security-related information about the specific properties that triggered the alert (properties appearing in the alert). Alerts might contain information about multiple users, hosts, files, ip addresses. This field indicates which properties triggered the alert generation.
func (m *Alert) GetTriggers()([]AlertTrigger) {
    if m == nil {
        return nil
    } else {
        return m.triggers
    }
}
// GetUriClickSecurityStates gets the uriClickSecurityStates property value. 
func (m *Alert) GetUriClickSecurityStates()([]UriClickSecurityState) {
    if m == nil {
        return nil
    } else {
        return m.uriClickSecurityStates
    }
}
// GetUserStates gets the userStates property value. Security-related stateful information generated by the provider about the user accounts related to this alert.
func (m *Alert) GetUserStates()([]UserSecurityState) {
    if m == nil {
        return nil
    } else {
        return m.userStates
    }
}
// GetVendorInformation gets the vendorInformation property value. Complex type containing details about the security product/service vendor, provider, and subprovider (for example, vendor=Microsoft; provider=Windows Defender ATP; subProvider=AppLocker). Required.
func (m *Alert) GetVendorInformation()(*SecurityVendorInformation) {
    if m == nil {
        return nil
    } else {
        return m.vendorInformation
    }
}
// GetVulnerabilityStates gets the vulnerabilityStates property value. Threat intelligence pertaining to one or more vulnerabilities related to this alert.
func (m *Alert) GetVulnerabilityStates()([]VulnerabilityState) {
    if m == nil {
        return nil
    } else {
        return m.vulnerabilityStates
    }
}
// GetFieldDeserializers the deserialization information for the current model
func (m *Alert) GetFieldDeserializers()(map[string]func(interface{}, i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode)(error)) {
    res := m.Entity.GetFieldDeserializers()
    res["activityGroupName"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetActivityGroupName(val)
        }
        return nil
    }
    res["alertDetections"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetCollectionOfObjectValues(func () i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable { return NewAlertDetection() })
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]AlertDetection, len(val))
            for i, v := range val {
                res[i] = *(v.(*AlertDetection))
            }
            m.SetAlertDetections(res)
        }
        return nil
    }
    res["assignedTo"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetAssignedTo(val)
        }
        return nil
    }
    res["azureSubscriptionId"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetAzureSubscriptionId(val)
        }
        return nil
    }
    res["azureTenantId"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetAzureTenantId(val)
        }
        return nil
    }
    res["category"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetCategory(val)
        }
        return nil
    }
    res["closedDateTime"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetTimeValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetClosedDateTime(val)
        }
        return nil
    }
    res["cloudAppStates"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetCollectionOfObjectValues(func () i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable { return NewCloudAppSecurityState() })
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]CloudAppSecurityState, len(val))
            for i, v := range val {
                res[i] = *(v.(*CloudAppSecurityState))
            }
            m.SetCloudAppStates(res)
        }
        return nil
    }
    res["comments"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetCollectionOfPrimitiveValues("string")
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]string, len(val))
            for i, v := range val {
                res[i] = *(v.(*string))
            }
            m.SetComments(res)
        }
        return nil
    }
    res["confidence"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetInt32Value()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetConfidence(val)
        }
        return nil
    }
    res["createdDateTime"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetTimeValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetCreatedDateTime(val)
        }
        return nil
    }
    res["description"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetDescription(val)
        }
        return nil
    }
    res["detectionIds"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetCollectionOfPrimitiveValues("string")
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]string, len(val))
            for i, v := range val {
                res[i] = *(v.(*string))
            }
            m.SetDetectionIds(res)
        }
        return nil
    }
    res["eventDateTime"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetTimeValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetEventDateTime(val)
        }
        return nil
    }
    res["feedback"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetEnumValue(ParseAlertFeedback)
        if err != nil {
            return err
        }
        if val != nil {
            cast := val.(AlertFeedback)
            m.SetFeedback(&cast)
        }
        return nil
    }
    res["fileStates"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetCollectionOfObjectValues(func () i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable { return NewFileSecurityState() })
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]FileSecurityState, len(val))
            for i, v := range val {
                res[i] = *(v.(*FileSecurityState))
            }
            m.SetFileStates(res)
        }
        return nil
    }
    res["historyStates"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetCollectionOfObjectValues(func () i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable { return NewAlertHistoryState() })
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]AlertHistoryState, len(val))
            for i, v := range val {
                res[i] = *(v.(*AlertHistoryState))
            }
            m.SetHistoryStates(res)
        }
        return nil
    }
    res["hostStates"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetCollectionOfObjectValues(func () i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable { return NewHostSecurityState() })
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]HostSecurityState, len(val))
            for i, v := range val {
                res[i] = *(v.(*HostSecurityState))
            }
            m.SetHostStates(res)
        }
        return nil
    }
    res["incidentIds"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetCollectionOfPrimitiveValues("string")
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]string, len(val))
            for i, v := range val {
                res[i] = *(v.(*string))
            }
            m.SetIncidentIds(res)
        }
        return nil
    }
    res["investigationSecurityStates"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetCollectionOfObjectValues(func () i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable { return NewInvestigationSecurityState() })
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]InvestigationSecurityState, len(val))
            for i, v := range val {
                res[i] = *(v.(*InvestigationSecurityState))
            }
            m.SetInvestigationSecurityStates(res)
        }
        return nil
    }
    res["lastEventDateTime"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetTimeValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetLastEventDateTime(val)
        }
        return nil
    }
    res["lastModifiedDateTime"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetTimeValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetLastModifiedDateTime(val)
        }
        return nil
    }
    res["malwareStates"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetCollectionOfObjectValues(func () i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable { return NewMalwareState() })
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]MalwareState, len(val))
            for i, v := range val {
                res[i] = *(v.(*MalwareState))
            }
            m.SetMalwareStates(res)
        }
        return nil
    }
    res["messageSecurityStates"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetCollectionOfObjectValues(func () i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable { return NewMessageSecurityState() })
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]MessageSecurityState, len(val))
            for i, v := range val {
                res[i] = *(v.(*MessageSecurityState))
            }
            m.SetMessageSecurityStates(res)
        }
        return nil
    }
    res["networkConnections"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetCollectionOfObjectValues(func () i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable { return NewNetworkConnection() })
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]NetworkConnection, len(val))
            for i, v := range val {
                res[i] = *(v.(*NetworkConnection))
            }
            m.SetNetworkConnections(res)
        }
        return nil
    }
    res["processes"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetCollectionOfObjectValues(func () i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable { return NewProcess() })
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]Process, len(val))
            for i, v := range val {
                res[i] = *(v.(*Process))
            }
            m.SetProcesses(res)
        }
        return nil
    }
    res["recommendedActions"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetCollectionOfPrimitiveValues("string")
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]string, len(val))
            for i, v := range val {
                res[i] = *(v.(*string))
            }
            m.SetRecommendedActions(res)
        }
        return nil
    }
    res["registryKeyStates"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetCollectionOfObjectValues(func () i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable { return NewRegistryKeyState() })
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]RegistryKeyState, len(val))
            for i, v := range val {
                res[i] = *(v.(*RegistryKeyState))
            }
            m.SetRegistryKeyStates(res)
        }
        return nil
    }
    res["securityResources"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetCollectionOfObjectValues(func () i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable { return NewSecurityResource() })
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]SecurityResource, len(val))
            for i, v := range val {
                res[i] = *(v.(*SecurityResource))
            }
            m.SetSecurityResources(res)
        }
        return nil
    }
    res["severity"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetEnumValue(ParseAlertSeverity)
        if err != nil {
            return err
        }
        if val != nil {
            cast := val.(AlertSeverity)
            m.SetSeverity(&cast)
        }
        return nil
    }
    res["sourceMaterials"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetCollectionOfPrimitiveValues("string")
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]string, len(val))
            for i, v := range val {
                res[i] = *(v.(*string))
            }
            m.SetSourceMaterials(res)
        }
        return nil
    }
    res["status"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetEnumValue(ParseAlertStatus)
        if err != nil {
            return err
        }
        if val != nil {
            cast := val.(AlertStatus)
            m.SetStatus(&cast)
        }
        return nil
    }
    res["tags"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetCollectionOfPrimitiveValues("string")
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]string, len(val))
            for i, v := range val {
                res[i] = *(v.(*string))
            }
            m.SetTags(res)
        }
        return nil
    }
    res["title"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetTitle(val)
        }
        return nil
    }
    res["triggers"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetCollectionOfObjectValues(func () i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable { return NewAlertTrigger() })
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]AlertTrigger, len(val))
            for i, v := range val {
                res[i] = *(v.(*AlertTrigger))
            }
            m.SetTriggers(res)
        }
        return nil
    }
    res["uriClickSecurityStates"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetCollectionOfObjectValues(func () i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable { return NewUriClickSecurityState() })
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]UriClickSecurityState, len(val))
            for i, v := range val {
                res[i] = *(v.(*UriClickSecurityState))
            }
            m.SetUriClickSecurityStates(res)
        }
        return nil
    }
    res["userStates"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetCollectionOfObjectValues(func () i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable { return NewUserSecurityState() })
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]UserSecurityState, len(val))
            for i, v := range val {
                res[i] = *(v.(*UserSecurityState))
            }
            m.SetUserStates(res)
        }
        return nil
    }
    res["vendorInformation"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetObjectValue(func () i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable { return NewSecurityVendorInformation() })
        if err != nil {
            return err
        }
        if val != nil {
            m.SetVendorInformation(val.(*SecurityVendorInformation))
        }
        return nil
    }
    res["vulnerabilityStates"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetCollectionOfObjectValues(func () i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable { return NewVulnerabilityState() })
        if err != nil {
            return err
        }
        if val != nil {
            res := make([]VulnerabilityState, len(val))
            for i, v := range val {
                res[i] = *(v.(*VulnerabilityState))
            }
            m.SetVulnerabilityStates(res)
        }
        return nil
    }
    return res
}
func (m *Alert) IsNil()(bool) {
    return m == nil
}
// Serialize serializes information the current object
func (m *Alert) Serialize(writer i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.SerializationWriter)(error) {
    err := m.Entity.Serialize(writer)
    if err != nil {
        return err
    }
    {
        err = writer.WriteStringValue("activityGroupName", m.GetActivityGroupName())
        if err != nil {
            return err
        }
    }
    {
        cast := make([]i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable, len(m.GetAlertDetections()))
        for i, v := range m.GetAlertDetections() {
            temp := v
            cast[i] = i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable(&temp)
        }
        err = writer.WriteCollectionOfObjectValues("alertDetections", cast)
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("assignedTo", m.GetAssignedTo())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("azureSubscriptionId", m.GetAzureSubscriptionId())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("azureTenantId", m.GetAzureTenantId())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("category", m.GetCategory())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteTimeValue("closedDateTime", m.GetClosedDateTime())
        if err != nil {
            return err
        }
    }
    {
        cast := make([]i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable, len(m.GetCloudAppStates()))
        for i, v := range m.GetCloudAppStates() {
            temp := v
            cast[i] = i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable(&temp)
        }
        err = writer.WriteCollectionOfObjectValues("cloudAppStates", cast)
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteCollectionOfStringValues("comments", m.GetComments())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteInt32Value("confidence", m.GetConfidence())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteTimeValue("createdDateTime", m.GetCreatedDateTime())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("description", m.GetDescription())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteCollectionOfStringValues("detectionIds", m.GetDetectionIds())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteTimeValue("eventDateTime", m.GetEventDateTime())
        if err != nil {
            return err
        }
    }
    if m.GetFeedback() != nil {
        cast := m.GetFeedback().String()
        err = writer.WriteStringValue("feedback", &cast)
        if err != nil {
            return err
        }
    }
    {
        cast := make([]i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable, len(m.GetFileStates()))
        for i, v := range m.GetFileStates() {
            temp := v
            cast[i] = i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable(&temp)
        }
        err = writer.WriteCollectionOfObjectValues("fileStates", cast)
        if err != nil {
            return err
        }
    }
    {
        cast := make([]i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable, len(m.GetHistoryStates()))
        for i, v := range m.GetHistoryStates() {
            temp := v
            cast[i] = i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable(&temp)
        }
        err = writer.WriteCollectionOfObjectValues("historyStates", cast)
        if err != nil {
            return err
        }
    }
    {
        cast := make([]i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable, len(m.GetHostStates()))
        for i, v := range m.GetHostStates() {
            temp := v
            cast[i] = i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable(&temp)
        }
        err = writer.WriteCollectionOfObjectValues("hostStates", cast)
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteCollectionOfStringValues("incidentIds", m.GetIncidentIds())
        if err != nil {
            return err
        }
    }
    {
        cast := make([]i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable, len(m.GetInvestigationSecurityStates()))
        for i, v := range m.GetInvestigationSecurityStates() {
            temp := v
            cast[i] = i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable(&temp)
        }
        err = writer.WriteCollectionOfObjectValues("investigationSecurityStates", cast)
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteTimeValue("lastEventDateTime", m.GetLastEventDateTime())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteTimeValue("lastModifiedDateTime", m.GetLastModifiedDateTime())
        if err != nil {
            return err
        }
    }
    {
        cast := make([]i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable, len(m.GetMalwareStates()))
        for i, v := range m.GetMalwareStates() {
            temp := v
            cast[i] = i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable(&temp)
        }
        err = writer.WriteCollectionOfObjectValues("malwareStates", cast)
        if err != nil {
            return err
        }
    }
    {
        cast := make([]i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable, len(m.GetMessageSecurityStates()))
        for i, v := range m.GetMessageSecurityStates() {
            temp := v
            cast[i] = i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable(&temp)
        }
        err = writer.WriteCollectionOfObjectValues("messageSecurityStates", cast)
        if err != nil {
            return err
        }
    }
    {
        cast := make([]i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable, len(m.GetNetworkConnections()))
        for i, v := range m.GetNetworkConnections() {
            temp := v
            cast[i] = i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable(&temp)
        }
        err = writer.WriteCollectionOfObjectValues("networkConnections", cast)
        if err != nil {
            return err
        }
    }
    {
        cast := make([]i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable, len(m.GetProcesses()))
        for i, v := range m.GetProcesses() {
            temp := v
            cast[i] = i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable(&temp)
        }
        err = writer.WriteCollectionOfObjectValues("processes", cast)
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteCollectionOfStringValues("recommendedActions", m.GetRecommendedActions())
        if err != nil {
            return err
        }
    }
    {
        cast := make([]i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable, len(m.GetRegistryKeyStates()))
        for i, v := range m.GetRegistryKeyStates() {
            temp := v
            cast[i] = i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable(&temp)
        }
        err = writer.WriteCollectionOfObjectValues("registryKeyStates", cast)
        if err != nil {
            return err
        }
    }
    {
        cast := make([]i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable, len(m.GetSecurityResources()))
        for i, v := range m.GetSecurityResources() {
            temp := v
            cast[i] = i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable(&temp)
        }
        err = writer.WriteCollectionOfObjectValues("securityResources", cast)
        if err != nil {
            return err
        }
    }
    if m.GetSeverity() != nil {
        cast := m.GetSeverity().String()
        err = writer.WriteStringValue("severity", &cast)
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteCollectionOfStringValues("sourceMaterials", m.GetSourceMaterials())
        if err != nil {
            return err
        }
    }
    if m.GetStatus() != nil {
        cast := m.GetStatus().String()
        err = writer.WriteStringValue("status", &cast)
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteCollectionOfStringValues("tags", m.GetTags())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("title", m.GetTitle())
        if err != nil {
            return err
        }
    }
    {
        cast := make([]i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable, len(m.GetTriggers()))
        for i, v := range m.GetTriggers() {
            temp := v
            cast[i] = i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable(&temp)
        }
        err = writer.WriteCollectionOfObjectValues("triggers", cast)
        if err != nil {
            return err
        }
    }
    {
        cast := make([]i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable, len(m.GetUriClickSecurityStates()))
        for i, v := range m.GetUriClickSecurityStates() {
            temp := v
            cast[i] = i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable(&temp)
        }
        err = writer.WriteCollectionOfObjectValues("uriClickSecurityStates", cast)
        if err != nil {
            return err
        }
    }
    {
        cast := make([]i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable, len(m.GetUserStates()))
        for i, v := range m.GetUserStates() {
            temp := v
            cast[i] = i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable(&temp)
        }
        err = writer.WriteCollectionOfObjectValues("userStates", cast)
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteObjectValue("vendorInformation", m.GetVendorInformation())
        if err != nil {
            return err
        }
    }
    {
        cast := make([]i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable, len(m.GetVulnerabilityStates()))
        for i, v := range m.GetVulnerabilityStates() {
            temp := v
            cast[i] = i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable(&temp)
        }
        err = writer.WriteCollectionOfObjectValues("vulnerabilityStates", cast)
        if err != nil {
            return err
        }
    }
    return nil
}
// SetActivityGroupName sets the activityGroupName property value. Name or alias of the activity group (attacker) this alert is attributed to.
func (m *Alert) SetActivityGroupName(value *string)() {
    if m != nil {
        m.activityGroupName = value
    }
}
// SetAlertDetections sets the alertDetections property value. 
func (m *Alert) SetAlertDetections(value []AlertDetection)() {
    if m != nil {
        m.alertDetections = value
    }
}
// SetAssignedTo sets the assignedTo property value. Name of the analyst the alert is assigned to for triage, investigation, or remediation (supports update).
func (m *Alert) SetAssignedTo(value *string)() {
    if m != nil {
        m.assignedTo = value
    }
}
// SetAzureSubscriptionId sets the azureSubscriptionId property value. Azure subscription ID, present if this alert is related to an Azure resource.
func (m *Alert) SetAzureSubscriptionId(value *string)() {
    if m != nil {
        m.azureSubscriptionId = value
    }
}
// SetAzureTenantId sets the azureTenantId property value. Azure Active Directory tenant ID. Required.
func (m *Alert) SetAzureTenantId(value *string)() {
    if m != nil {
        m.azureTenantId = value
    }
}
// SetCategory sets the category property value. Category of the alert (for example, credentialTheft, ransomware, etc.).
func (m *Alert) SetCategory(value *string)() {
    if m != nil {
        m.category = value
    }
}
// SetClosedDateTime sets the closedDateTime property value. Time at which the alert was closed. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z (supports update).
func (m *Alert) SetClosedDateTime(value *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)() {
    if m != nil {
        m.closedDateTime = value
    }
}
// SetCloudAppStates sets the cloudAppStates property value. Security-related stateful information generated by the provider about the cloud application/s related to this alert.
func (m *Alert) SetCloudAppStates(value []CloudAppSecurityState)() {
    if m != nil {
        m.cloudAppStates = value
    }
}
// SetComments sets the comments property value. Customer-provided comments on alert (for customer alert management) (supports update).
func (m *Alert) SetComments(value []string)() {
    if m != nil {
        m.comments = value
    }
}
// SetConfidence sets the confidence property value. Confidence of the detection logic (percentage between 1-100).
func (m *Alert) SetConfidence(value *int32)() {
    if m != nil {
        m.confidence = value
    }
}
// SetCreatedDateTime sets the createdDateTime property value. Time at which the alert was created by the alert provider. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.
func (m *Alert) SetCreatedDateTime(value *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)() {
    if m != nil {
        m.createdDateTime = value
    }
}
// SetDescription sets the description property value. Alert description.
func (m *Alert) SetDescription(value *string)() {
    if m != nil {
        m.description = value
    }
}
// SetDetectionIds sets the detectionIds property value. Set of alerts related to this alert entity (each alert is pushed to the SIEM as a separate record).
func (m *Alert) SetDetectionIds(value []string)() {
    if m != nil {
        m.detectionIds = value
    }
}
// SetEventDateTime sets the eventDateTime property value. Time at which the event(s) that served as the trigger(s) to generate the alert occurred. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.
func (m *Alert) SetEventDateTime(value *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)() {
    if m != nil {
        m.eventDateTime = value
    }
}
// SetFeedback sets the feedback property value. Analyst feedback on the alert. Possible values are: unknown, truePositive, falsePositive, benignPositive. (supports update)
func (m *Alert) SetFeedback(value *AlertFeedback)() {
    if m != nil {
        m.feedback = value
    }
}
// SetFileStates sets the fileStates property value. Security-related stateful information generated by the provider about the file(s) related to this alert.
func (m *Alert) SetFileStates(value []FileSecurityState)() {
    if m != nil {
        m.fileStates = value
    }
}
// SetHistoryStates sets the historyStates property value. A collection of alertHistoryStates comprising an audit log of all updates made to an alert.
func (m *Alert) SetHistoryStates(value []AlertHistoryState)() {
    if m != nil {
        m.historyStates = value
    }
}
// SetHostStates sets the hostStates property value. Security-related stateful information generated by the provider about the host(s) related to this alert.
func (m *Alert) SetHostStates(value []HostSecurityState)() {
    if m != nil {
        m.hostStates = value
    }
}
// SetIncidentIds sets the incidentIds property value. IDs of incidents related to current alert.
func (m *Alert) SetIncidentIds(value []string)() {
    if m != nil {
        m.incidentIds = value
    }
}
// SetInvestigationSecurityStates sets the investigationSecurityStates property value. 
func (m *Alert) SetInvestigationSecurityStates(value []InvestigationSecurityState)() {
    if m != nil {
        m.investigationSecurityStates = value
    }
}
// SetLastEventDateTime sets the lastEventDateTime property value. 
func (m *Alert) SetLastEventDateTime(value *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)() {
    if m != nil {
        m.lastEventDateTime = value
    }
}
// SetLastModifiedDateTime sets the lastModifiedDateTime property value. Time at which the alert entity was last modified. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
func (m *Alert) SetLastModifiedDateTime(value *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)() {
    if m != nil {
        m.lastModifiedDateTime = value
    }
}
// SetMalwareStates sets the malwareStates property value. Threat Intelligence pertaining to malware related to this alert.
func (m *Alert) SetMalwareStates(value []MalwareState)() {
    if m != nil {
        m.malwareStates = value
    }
}
// SetMessageSecurityStates sets the messageSecurityStates property value. 
func (m *Alert) SetMessageSecurityStates(value []MessageSecurityState)() {
    if m != nil {
        m.messageSecurityStates = value
    }
}
// SetNetworkConnections sets the networkConnections property value. Security-related stateful information generated by the provider about the network connection(s) related to this alert.
func (m *Alert) SetNetworkConnections(value []NetworkConnection)() {
    if m != nil {
        m.networkConnections = value
    }
}
// SetProcesses sets the processes property value. Security-related stateful information generated by the provider about the process or processes related to this alert.
func (m *Alert) SetProcesses(value []Process)() {
    if m != nil {
        m.processes = value
    }
}
// SetRecommendedActions sets the recommendedActions property value. Vendor/provider recommended action(s) to take as a result of the alert (for example, isolate machine, enforce2FA, reimage host).
func (m *Alert) SetRecommendedActions(value []string)() {
    if m != nil {
        m.recommendedActions = value
    }
}
// SetRegistryKeyStates sets the registryKeyStates property value. Security-related stateful information generated by the provider about the registry keys related to this alert.
func (m *Alert) SetRegistryKeyStates(value []RegistryKeyState)() {
    if m != nil {
        m.registryKeyStates = value
    }
}
// SetSecurityResources sets the securityResources property value. Resources related to current alert. For example, for some alerts this can have the Azure Resource value.
func (m *Alert) SetSecurityResources(value []SecurityResource)() {
    if m != nil {
        m.securityResources = value
    }
}
// SetSeverity sets the severity property value. Alert severity - set by vendor/provider. Possible values are: unknown, informational, low, medium, high. Required.
func (m *Alert) SetSeverity(value *AlertSeverity)() {
    if m != nil {
        m.severity = value
    }
}
// SetSourceMaterials sets the sourceMaterials property value. Hyperlinks (URIs) to the source material related to the alert, for example, provider's user interface for alerts or log search, etc.
func (m *Alert) SetSourceMaterials(value []string)() {
    if m != nil {
        m.sourceMaterials = value
    }
}
// SetStatus sets the status property value. Alert lifecycle status (stage). Possible values are: unknown, newAlert, inProgress, resolved. (supports update). Required.
func (m *Alert) SetStatus(value *AlertStatus)() {
    if m != nil {
        m.status = value
    }
}
// SetTags sets the tags property value. User-definable labels that can be applied to an alert and can serve as filter conditions (for example 'HVA', 'SAW', etc.) (supports update).
func (m *Alert) SetTags(value []string)() {
    if m != nil {
        m.tags = value
    }
}
// SetTitle sets the title property value. Alert title. Required.
func (m *Alert) SetTitle(value *string)() {
    if m != nil {
        m.title = value
    }
}
// SetTriggers sets the triggers property value. Security-related information about the specific properties that triggered the alert (properties appearing in the alert). Alerts might contain information about multiple users, hosts, files, ip addresses. This field indicates which properties triggered the alert generation.
func (m *Alert) SetTriggers(value []AlertTrigger)() {
    if m != nil {
        m.triggers = value
    }
}
// SetUriClickSecurityStates sets the uriClickSecurityStates property value. 
func (m *Alert) SetUriClickSecurityStates(value []UriClickSecurityState)() {
    if m != nil {
        m.uriClickSecurityStates = value
    }
}
// SetUserStates sets the userStates property value. Security-related stateful information generated by the provider about the user accounts related to this alert.
func (m *Alert) SetUserStates(value []UserSecurityState)() {
    if m != nil {
        m.userStates = value
    }
}
// SetVendorInformation sets the vendorInformation property value. Complex type containing details about the security product/service vendor, provider, and subprovider (for example, vendor=Microsoft; provider=Windows Defender ATP; subProvider=AppLocker). Required.
func (m *Alert) SetVendorInformation(value *SecurityVendorInformation)() {
    if m != nil {
        m.vendorInformation = value
    }
}
// SetVulnerabilityStates sets the vulnerabilityStates property value. Threat intelligence pertaining to one or more vulnerabilities related to this alert.
func (m *Alert) SetVulnerabilityStates(value []VulnerabilityState)() {
    if m != nil {
        m.vulnerabilityStates = value
    }
}
