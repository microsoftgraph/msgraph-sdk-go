// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models

import (
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
    ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e "github.com/microsoft/kiota-abstractions-go/store"
)

type EducationSpeakerCoachDeliverySettings struct {
    // Stores model information.
    backingStore ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackingStore
}
// NewEducationSpeakerCoachDeliverySettings instantiates a new EducationSpeakerCoachDeliverySettings and sets the default values.
func NewEducationSpeakerCoachDeliverySettings()(*EducationSpeakerCoachDeliverySettings) {
    m := &EducationSpeakerCoachDeliverySettings{
    }
    m.backingStore = ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackingStoreFactoryInstance();
    m.SetAdditionalData(make(map[string]any))
    return m
}
// CreateEducationSpeakerCoachDeliverySettingsFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateEducationSpeakerCoachDeliverySettingsFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewEducationSpeakerCoachDeliverySettings(), nil
}
// GetAdditionalData gets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
// returns a map[string]any when successful
func (m *EducationSpeakerCoachDeliverySettings) GetAdditionalData()(map[string]any) {
    val , err :=  m.backingStore.Get("additionalData")
    if err != nil {
        panic(err)
    }
    if val == nil {
        var value = make(map[string]any);
        m.SetAdditionalData(value);
    }
    return val.(map[string]any)
}
// GetAreFillerWordsEnabled gets the areFillerWordsEnabled property value. Indicates whether the student should receive feedback on their filler words from the Speaker Coach.
// returns a *bool when successful
func (m *EducationSpeakerCoachDeliverySettings) GetAreFillerWordsEnabled()(*bool) {
    val, err := m.GetBackingStore().Get("areFillerWordsEnabled")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*bool)
    }
    return nil
}
// GetBackingStore gets the BackingStore property value. Stores model information.
// returns a BackingStore when successful
func (m *EducationSpeakerCoachDeliverySettings) GetBackingStore()(ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackingStore) {
    return m.backingStore
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *EducationSpeakerCoachDeliverySettings) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := make(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error))
    res["areFillerWordsEnabled"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetAreFillerWordsEnabled(val)
        }
        return nil
    }
    res["isPaceEnabled"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetIsPaceEnabled(val)
        }
        return nil
    }
    res["isPitchEnabled"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetIsPitchEnabled(val)
        }
        return nil
    }
    res["isPronunciationEnabled"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetIsPronunciationEnabled(val)
        }
        return nil
    }
    res["@odata.type"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetOdataType(val)
        }
        return nil
    }
    return res
}
// GetIsPaceEnabled gets the isPaceEnabled property value. Indicates whether the student should receive feedback on their pace from the Speaker Coach.
// returns a *bool when successful
func (m *EducationSpeakerCoachDeliverySettings) GetIsPaceEnabled()(*bool) {
    val, err := m.GetBackingStore().Get("isPaceEnabled")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*bool)
    }
    return nil
}
// GetIsPitchEnabled gets the isPitchEnabled property value. Indicates whether the student should receive feedback on their pitch from the Speaker Coach.
// returns a *bool when successful
func (m *EducationSpeakerCoachDeliverySettings) GetIsPitchEnabled()(*bool) {
    val, err := m.GetBackingStore().Get("isPitchEnabled")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*bool)
    }
    return nil
}
// GetIsPronunciationEnabled gets the isPronunciationEnabled property value. Indicates whether the student should receive feedback on their pronunciation from the Speaker Coach. This is automatically enabled if isAiFeedbackEnabled is set to true on the educationSpeakerProgressResource, or if spokenLanguageLocale is set to a value besides en-US on the educationSpeakerProgressResource.
// returns a *bool when successful
func (m *EducationSpeakerCoachDeliverySettings) GetIsPronunciationEnabled()(*bool) {
    val, err := m.GetBackingStore().Get("isPronunciationEnabled")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*bool)
    }
    return nil
}
// GetOdataType gets the @odata.type property value. The OdataType property
// returns a *string when successful
func (m *EducationSpeakerCoachDeliverySettings) GetOdataType()(*string) {
    val, err := m.GetBackingStore().Get("odataType")
    if err != nil {
        panic(err)
    }
    if val != nil {
        return val.(*string)
    }
    return nil
}
// Serialize serializes information the current object
func (m *EducationSpeakerCoachDeliverySettings) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    {
        err := writer.WriteBoolValue("areFillerWordsEnabled", m.GetAreFillerWordsEnabled())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("isPaceEnabled", m.GetIsPaceEnabled())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("isPitchEnabled", m.GetIsPitchEnabled())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("isPronunciationEnabled", m.GetIsPronunciationEnabled())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("@odata.type", m.GetOdataType())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteAdditionalData(m.GetAdditionalData())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetAdditionalData sets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
func (m *EducationSpeakerCoachDeliverySettings) SetAdditionalData(value map[string]any)() {
    err := m.GetBackingStore().Set("additionalData", value)
    if err != nil {
        panic(err)
    }
}
// SetAreFillerWordsEnabled sets the areFillerWordsEnabled property value. Indicates whether the student should receive feedback on their filler words from the Speaker Coach.
func (m *EducationSpeakerCoachDeliverySettings) SetAreFillerWordsEnabled(value *bool)() {
    err := m.GetBackingStore().Set("areFillerWordsEnabled", value)
    if err != nil {
        panic(err)
    }
}
// SetBackingStore sets the BackingStore property value. Stores model information.
func (m *EducationSpeakerCoachDeliverySettings) SetBackingStore(value ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackingStore)() {
    m.backingStore = value
}
// SetIsPaceEnabled sets the isPaceEnabled property value. Indicates whether the student should receive feedback on their pace from the Speaker Coach.
func (m *EducationSpeakerCoachDeliverySettings) SetIsPaceEnabled(value *bool)() {
    err := m.GetBackingStore().Set("isPaceEnabled", value)
    if err != nil {
        panic(err)
    }
}
// SetIsPitchEnabled sets the isPitchEnabled property value. Indicates whether the student should receive feedback on their pitch from the Speaker Coach.
func (m *EducationSpeakerCoachDeliverySettings) SetIsPitchEnabled(value *bool)() {
    err := m.GetBackingStore().Set("isPitchEnabled", value)
    if err != nil {
        panic(err)
    }
}
// SetIsPronunciationEnabled sets the isPronunciationEnabled property value. Indicates whether the student should receive feedback on their pronunciation from the Speaker Coach. This is automatically enabled if isAiFeedbackEnabled is set to true on the educationSpeakerProgressResource, or if spokenLanguageLocale is set to a value besides en-US on the educationSpeakerProgressResource.
func (m *EducationSpeakerCoachDeliverySettings) SetIsPronunciationEnabled(value *bool)() {
    err := m.GetBackingStore().Set("isPronunciationEnabled", value)
    if err != nil {
        panic(err)
    }
}
// SetOdataType sets the @odata.type property value. The OdataType property
func (m *EducationSpeakerCoachDeliverySettings) SetOdataType(value *string)() {
    err := m.GetBackingStore().Set("odataType", value)
    if err != nil {
        panic(err)
    }
}
type EducationSpeakerCoachDeliverySettingsable interface {
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.AdditionalDataHolder
    ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackedModel
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    GetAreFillerWordsEnabled()(*bool)
    GetBackingStore()(ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackingStore)
    GetIsPaceEnabled()(*bool)
    GetIsPitchEnabled()(*bool)
    GetIsPronunciationEnabled()(*bool)
    GetOdataType()(*string)
    SetAreFillerWordsEnabled(value *bool)()
    SetBackingStore(value ie8677ce2c7e1b4c22e9c3827ecd078d41185424dd9eeb92b7d971ed2d49a392e.BackingStore)()
    SetIsPaceEnabled(value *bool)()
    SetIsPitchEnabled(value *bool)()
    SetIsPronunciationEnabled(value *bool)()
    SetOdataType(value *string)()
}
